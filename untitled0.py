# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mk75LyeI28xyfdR5pLqHABkUQtmG490w
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd

df = pd.read_csv('viral_posts_dataset.csv')
df.head()

"""## **Exploratory Data Analysis (EDA)**"""

df.info()
df.describe()
df['is_viral'].value_counts()

df.isnull().sum()

"""# Visualizations"""

import seaborn as sns
import matplotlib.pyplot as plt

sns.histplot(df['score'], kde=True)
plt.title('Distribution of Post Scores')
plt.xlabel('Score')
plt.ylabel('Frequency')
plt.show()

sns.countplot(data=df, x='is_viral')
plt.title('Viral vs Non-Viral Posts')
plt.xlabel('Is Viral')
plt.ylabel('Count')
plt.show()

sns.pairplot(df[['word_count', 'sentiment', 'num_comments', 'upvote_ratio', 'is_viral']], hue='is_viral')
plt.show()

"""# Prepare the Data for Modeling"""

# Define feature columns and target column
features = ['word_count', 'sentiment', 'num_comments', 'upvote_ratio']
X = df[features]
y = df['is_viral']

#Train-Test Split

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

from sklearn.ensemble import RandomForestClassifier

# Initialize and train model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Predict on test set
y_pred = model.predict(X_test)

# Metrics
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

import seaborn as sns
import matplotlib.pyplot as plt

cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues')
plt.title('Confusion Matrix')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.show()





